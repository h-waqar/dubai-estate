generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --- Users & Auth ---
model User {
  id        Int      @id @default(autoincrement())
  name      String?
  email     String   @unique
  password  String? // For credentials login (optional if only OAuth)
  role      Role     @default(USER) // Role-based access
  profile   Profile?
  admin     Admin?
  posts     Post[] // Relation: user can write many posts
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id     Int     @id @default(autoincrement())
  userId Int     @unique
  bio    String?

  user User @relation(fields: [userId], references: [id])
}

model Admin {
  id     Int @id @default(autoincrement())
  userId Int @unique

  user User @relation(fields: [userId], references: [id])
}

enum Role {
  SUPER_ADMIN
  ADMIN
  EDITOR
  WRITER
  MANAGER
  SUPPORT
  USER
}

// --- Posts ---
model Post {
  id         Int      @id @default(autoincrement())
  title      String
  slug       String   @unique // SEO-friendly URL
  excerpt    String? // short summary
  content    String // markdown/html
  coverImage String? // path or external URL
  category   String? // flexible for now (can enum later)
  tags       String[] @default([]) // Postgres text[] for tags
  published  Boolean  @default(true)

  authorId Int
  author   User @relation(fields: [authorId], references: [id])

  publishedAt DateTime ?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
